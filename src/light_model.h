#pragma once
#include <vector>
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>

std::vector<GLfloat> low_poly_sphere = { 0.416265, 0.416265, 1,
-0.416265, -0.416265, 1,
0.416265, -0.416265, 1,

1, 0.416265, -0.416265,
1, -0.416265, 0.416265,
1, -0.416265, -0.416265,

-0.416265, 1, -0.416265,
0.416265, 1, 0.416265,
0.416265, 1, -0.416265,

-1, 0.416265, 0.416265,
-1, -0.416265, -0.416265,
-1, -0.416265, 0.416265,

-0.416265, 0.416265, -1,
0.416265, -0.416265, -1,
-0.416265, -0.416265, -1,

-0.416265, -1, 0.416265,
-0.416265, -0.416265, 1,
-1, -0.416265, 0.416265,

-0.416265, 0.416265, 1,
-0.416265, 1, 0.416265,
-1, 0.416265, 0.416265,

-0.416265, -1, -0.416265,
-1, -0.416265, -0.416265,
-0.416265, -0.416265, -1,

-0.416265, 1, -0.416265,
-0.416265, 0.416265, -1,
-1, 0.416265, -0.416265,

0.416265, -1, 0.416265,
1, -0.416265, 0.416265,
0.416265, -0.416265, 1,

0.416265, 1, 0.416265,
0.416265, 0.416265, 1,
1, 0.416265, 0.416265,

0.416265, -1, -0.416265,
0.416265, -0.416265, -1,
1, -0.416265, -0.416265,

0.416265, 1, -0.416265,
1, 0.416265, -0.416265,
0.416265, 0.416265, -1,

-0.416265, -1, 0.416265,
-1, -0.416265, -0.416265,
-0.416265, -1, -0.416265,

-0.416265, 0.416265, 1,
-1, -0.416265, 0.416265,
-0.416265, -0.416265, 1,

-0.416265, 1, -0.416265,
-1, 0.416265, 0.416265,
-0.416265, 1, 0.416265,

-0.416265, -0.416265, -1,
-1, 0.416265, -0.416265,
-0.416265, 0.416265, -1,

-0.416265, -1, -0.416265,
0.416265, -0.416265, -1,
0.416265, -1, -0.416265,

0.416265, 1, -0.416265,
-0.416265, 0.416265, -1,
-0.416265, 1, -0.416265,

1, -0.416265, -0.416265,
0.416265, 0.416265, -1,
1, 0.416265, -0.416265,

0.416265, -1, -0.416265,
1, -0.416265, 0.416265,
0.416265, -1, 0.416265,

0.416265, 1, 0.416265,
1, 0.416265, -0.416265,
0.416265, 1, -0.416265,

0.416265, -0.416265, 1,
1, 0.416265, 0.416265,
0.416265, 0.416265, 1,

0.416265, -1, 0.416265,
-0.416265, -0.416265, 1,
-0.416265, -1, 0.416265,

-0.416265, 1, 0.416265,
0.416265, 0.416265, 1,
0.416265, 1, 0.416265,

0.416265, -1, -0.416265,
-0.416265, -1, 0.416265,
-0.416265, -1, -0.416265,

0.416265, 0.416265, 1,
-0.416265, 0.416265, 1,
-0.416265, -0.416265, 1,

1, 0.416265, -0.416265,
1, 0.416265, 0.416265,
1, -0.416265, 0.416265,

-0.416265, 1, -0.416265,
-0.416265, 1, 0.416265,
0.416265, 1, 0.416265,

-1, 0.416265, 0.416265,
-1, 0.416265, -0.416265,
-1, -0.416265, -0.416265,

-0.416265, 0.416265, -1,
0.416265, 0.416265, -1,
0.416265, -0.416265, -1,

-0.416265, -1, 0.416265,
-1, -0.416265, 0.416265,
-1, -0.416265, -0.416265,

-0.416265, 0.416265, 1,
-1, 0.416265, 0.416265,
-1, -0.416265, 0.416265,

-0.416265, 1, -0.416265,
-1, 0.416265, -0.416265,
-1, 0.416265, 0.416265,

-0.416265, -0.416265, -1,
-1, -0.416265, -0.416265,
-1, 0.416265, -0.416265,

-0.416265, -1, -0.416265,
-0.416265, -0.416265, -1,
0.416265, -0.416265, -1,

0.416265, 1, -0.416265,
0.416265, 0.416265, -1,
-0.416265, 0.416265, -1,

1, -0.416265, -0.416265,
0.416265, -0.416265, -1,
0.416265, 0.416265, -1,

0.416265, -1, -0.416265,
1, -0.416265, -0.416265,
1, -0.416265, 0.416265,

0.416265, 1, 0.416265,
1, 0.416265, 0.416265,
1, 0.416265, -0.416265,

0.416265, -0.416265, 1,
1, -0.416265, 0.416265,
1, 0.416265, 0.416265,

0.416265, -1, 0.416265,
0.416265, -0.416265, 1,
-0.416265, -0.416265, 1,

-0.416265, 1, 0.416265,
-0.416265, 0.416265, 1,
0.416265, 0.416265, 1,

0.416265, -1, -0.416265,
0.416265, -1, 0.416265,
-0.416265, -1, 0.416265

};