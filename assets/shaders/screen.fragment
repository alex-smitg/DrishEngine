#version 330 core
out vec4 FragColor;
  
in vec2 TexCoords;

uniform sampler2D screenTexture;

const float offset = 1.0 / 300.0;  

uniform float Directions;
uniform float Size;
uniform float Quality;


void main()
{
    
    
    vec4 col = texture(screenTexture, TexCoords);

    vec4 BrightColor;

    float brightness = dot(col.rgb, vec3(0.2126, 0.7152, 0.0722));
    if(brightness > 0.5)
        BrightColor = vec4(col.rgb, 1.0);
    else
        BrightColor = vec4(0.0, 0.0, 0.0, 1.0);


    float Pi = 6.28318530718;
    

   
    vec2 Radius = Size/TexCoords;
    
    vec4 Color = texture(screenTexture, TexCoords);
    

    for( float d=0.0; d<Pi; d+=Pi/Directions)
    {
		for(float i=1.0/Quality; i<=1.0; i+=1.0/Quality)
        {
			Color += texture(screenTexture, TexCoords+vec2(-cos(d),sin(d))*Radius*i);		
        }
    }
    

    Color /= Quality * Directions - 15.0;

    FragColor = Color + texture(screenTexture, TexCoords);;
}  